/**********************************************************************************************************************

 *  FILE DESCRIPTION
 *  -------------------------------------------------------------------------------------------------------------------
 *         File:  IntCtrl_Memmap.h
 *       Module:  IntCtrl
 *
 *  Description:  header file for IntCtrl memmory map    
 *  
 *********************************************************************************************************************/
#ifndef INT_CTRL_MEMMAP_H
#define INT_CTRL_MEMMAP_H

/**********************************************************************************************************************
 * INCLUDES
 *********************************************************************************************************************/
#include "Std_Types.h"
#include "IntCtrl_Types.h"
#include "Mcu_Hw.h"

/**********************************************************************************************************************
 *  GLOBAL CONSTANT MACROS
 *********************************************************************************************************************/

#define SCS_BASE                  (0xE000E000UL)       
#define NVIC_BASE                 (SCS_BASE + 0x0100UL)                   
#define NVIC                      ((NVIC_t*)NVIC_BASE)   

/**********************************************************************************************************************
 *  GLOBAL FUNCTION MACROS
 *********************************************************************************************************************/


/**********************************************************************************************************************
 *  GLOBAL DATA TYPES AND STRUCTURES
 *********************************************************************************************************************/
/**
  \brief  Structure type to access the Nested Vectored Interrupt Controller (NVIC).
 */
typedef struct
{
  volatile uint32 ISER[8U];               /*!< Offset: 0x000 (R/W)  Interrupt Set Enable Register */
  uint32 RESERVED0[24U];
  volatile uint32 ICER[8U];               /*!< Offset: 0x080 (R/W)  Interrupt Clear Enable Register */
  uint32 RSERVED1[24U];
  volatile uint32 ISPR[8U];               /*!< Offset: 0x100 (R/W)  Interrupt Set Pending Register */
  uint32 RESERVED2[24U];
  volatile uint32 ICPR[8U];               /*!< Offset: 0x180 (R/W)  Interrupt Clear Pending Register */
  uint32 RESERVED3[24U];
  volatile uint32 IABR[8U];               /*!< Offset: 0x200 (R/W)  Interrupt Active bit Register */
  uint32 RESERVED4[56U];
  volatile uint8  IP[240U];               /*!< Offset: 0x300 (R/W)  Interrupt Priority Register (8Bit wide) */
  uint32 RESERVED5[644U];
  volatile  uint32 STIR;                  /*!< Offset: 0xE00 ( /W)  Software Trigger Interrupt Register */
} NVIC_t;
/**********************************************************************************************************************
 *  GLOBAL DATA PROTOTYPES
 *********************************************************************************************************************/

 
/**********************************************************************************************************************
 *  GLOBAL FUNCTION PROTOTYPES
 *********************************************************************************************************************/

#endif  /* INT_CTRL_MEMMAP_H */

/**********************************************************************************************************************
 *  END OF FILE: IntCtrl_Memmap.h
 *********************************************************************************************************************/
